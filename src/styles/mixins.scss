// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本省略
@mixin ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// 多行文本省略
@mixin multi-ellipsis($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 居中对齐
@mixin center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// 垂直居中
@mixin vertical-center {
  display: flex;
  align-items: center;
}

// 水平居中
@mixin horizontal-center {
  display: flex;
  justify-content: center;
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs - 1px}) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) {
      @content;
    }
  }
}

// 1px边框解决方案
@mixin hairline($direction: all, $color: #ebedf0) {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    background-color: $color;

    @if $direction == top {
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      transform: scaleY(0.5);
    } @else if $direction == bottom {
      bottom: 0;
      left: 0;
      right: 0;
      height: 1px;
      transform: scaleY(0.5);
    } @else if $direction == left {
      top: 0;
      left: 0;
      bottom: 0;
      width: 1px;
      transform: scaleX(0.5);
    } @else if $direction == right {
      top: 0;
      right: 0;
      bottom: 0;
      width: 1px;
      transform: scaleX(0.5);
    } @else {
      top: 0;
      left: 0;
      width: 200%;
      height: 200%;
      border: 1px solid $color;
      transform: scale(0.5);
      transform-origin: 0 0;
    }
  }
}

// 安全区域适配
@mixin safe-area-insets($property: padding, $direction: all) {
  @if $direction == top {
    #{$property}-top: constant(safe-area-inset-top);
    #{$property}-top: env(safe-area-inset-top);
  } @else if $direction == bottom {
    #{$property}-bottom: constant(safe-area-inset-bottom);
    #{$property}-bottom: env(safe-area-inset-bottom);
  } @else if $direction == left {
    #{$property}-left: constant(safe-area-inset-left);
    #{$property}-left: env(safe-area-inset-left);
  } @else if $direction == right {
    #{$property}-right: constant(safe-area-inset-right);
    #{$property}-right: env(safe-area-inset-right);
  } @else {
    #{$property}: constant(safe-area-inset-top)
      constant(safe-area-inset-right)
      constant(safe-area-inset-bottom)
      constant(safe-area-inset-left);
    #{$property}: env(safe-area-inset-top)
      env(safe-area-inset-right)
      env(safe-area-inset-bottom)
      env(safe-area-inset-left);
  }
}
